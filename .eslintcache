[{"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\index.js":"1","C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\App.js":"2","C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\reportWebVitals.js":"3","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\index.js":"4","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\App.js":"5","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\reportWebVitals.js":"6","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js":"7","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx":"8","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx":"9","C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js":"10","C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx":"11","C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx":"12","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\google-analytics-sensitive\\gaConfiguration.jsx":"13","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\EvidenceRow\\EvidenceRow.jsx":"14","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\UtilitiesContainer.jsx":"15","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\UtilitiesTabs.jsx":"16","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Utilities.jsx":"17","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Whiteboard\\Whiteboard.jsx":"18","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\EvidenceContainer.jsx":"19","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\HuntCountdown\\HuntCountdown.jsx":"20","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ResetButton\\ResetButton.jsx":"21","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceTable\\EvidenceTable.jsx":"22","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceRow\\EvidenceRow.jsx":"23","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ToggleSwitch\\ThreeWaySwitch.jsx":"24","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\Header\\Header.jsx":"25"},{"size":500,"mtime":1607188390330,"results":"26","hashOfConfig":"27"},{"size":3394,"mtime":1608940809614,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607188390330,"results":"29","hashOfConfig":"27"},{"size":517,"mtime":1609698078398,"results":"30","hashOfConfig":"31"},{"size":6382,"mtime":1610645072383,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1609698078399,"results":"33","hashOfConfig":"31"},{"size":2530,"mtime":1609698078401,"results":"34","hashOfConfig":"31"},{"size":2434,"mtime":1610644954565,"results":"35","hashOfConfig":"31"},{"size":391,"mtime":1610643911498,"results":"36","hashOfConfig":"31"},{"size":2530,"mtime":1608479045273,"results":"37","hashOfConfig":"27"},{"size":1279,"mtime":1608757723752,"results":"38","hashOfConfig":"27"},{"size":1475,"mtime":1608478368650,"results":"39","hashOfConfig":"27"},{"size":61,"mtime":1609698078403,"results":"40","hashOfConfig":"31"},{"size":1213,"mtime":1610373947024,"results":"41","hashOfConfig":"31"},{"size":1039,"mtime":1610647461770,"results":"42","hashOfConfig":"31"},{"size":797,"mtime":1610637726290,"results":"43","hashOfConfig":"31"},{"size":1299,"mtime":1610637726285,"results":"44","hashOfConfig":"31"},{"size":3003,"mtime":1610637620851,"results":"45","hashOfConfig":"31"},{"size":743,"mtime":1610639185283,"results":"46","hashOfConfig":"31"},{"size":3111,"mtime":1610637620848,"results":"47","hashOfConfig":"31"},{"size":291,"mtime":1610637620845,"results":"48","hashOfConfig":"31"},{"size":1187,"mtime":1610637620843,"results":"49","hashOfConfig":"31"},{"size":697,"mtime":1610637620841,"results":"50","hashOfConfig":"31"},{"size":1534,"mtime":1610639097720,"results":"51","hashOfConfig":"31"},{"size":499,"mtime":1610645555802,"results":"52","hashOfConfig":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"769yw1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"xyjc1e",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\index.js",[],["110","111"],"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\App.js",["112","113"],"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\reportWebVitals.js",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\index.js",[],["114","115"],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\App.js",["116","117"],"import React, { useState, useEffect } from 'react';\r\n\r\n// Analytics\r\nimport ReactGA from 'react-ga';\r\n\r\n// Components\r\nimport Header from \"./components/Header/Header\";\r\nimport GhostContainer from \"./components/GhostContainer/GhostContainer\";\r\nimport UtilitiesContainer from './components/UtilitiesContainer/UtilitiesContainer';\r\n\r\n// Data\r\nimport ghostData from './utils/data/ghostData.json';\r\nimport googleId from \"./utils/google-analytics-sensitive/gaConfiguration\";\r\n\r\n// Auxiliary functions\r\nimport fullOutput from './utils/auxiliaryFunctions/outcomeChecker';\r\n\r\n// Styling\r\nimport logo from './images/logos/logo.png';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const allGhostIDs = ghostData.ghosts.map((ghost) => {\r\n        return ghost.id\r\n    })\r\n\r\n    // Evidence handlers\r\n    const [positiveEvidence, setPositiveEvidence] = useState([]);\r\n    const [negativeEvidence, setNegativeEvidence] = useState([]);\r\n\r\n    // Possible outputs\r\n    const [detectedGhost, setDetectedGhost] = useState('');\r\n    const [possibleGhosts, setPossibleGhosts] = useState(allGhostIDs);\r\n    const [negativeGhosts, setNegativeGhosts] = useState([]);\r\n    const [messageToUser, setMessageToUser] = useState('');\r\n\r\n    // Current utility\r\n    const [currentUtility, setCurrentUtility] = useState(\"evidence\")\r\n\r\n    // Whiteboard Data\r\n    const [ghostName, setGhostName] = useState('');\r\n    const [objectiveTwo, setObjectiveTwo] = useState('');\r\n    const [objectiveThree, setObjectiveThree] = useState('');\r\n    const [objectiveFour, setObjectiveFour] = useState('');\r\n    const [ghostBehavior, setGhostBehavior] = useState('');\r\n    const [whiteboardData, setWhiteboardData] = useState({});\r\n\r\n    useEffect(() => {\r\n        ReactGA.initialize(googleId);\r\n        ReactGA.pageview('/');\r\n\r\n        stateUpdater()\r\n\r\n    }, [positiveEvidence, negativeEvidence]);\r\n\r\n    const handleUtility = (event) => {\r\n        currentUtility === event.target.value\r\n            ? setCurrentUtility(\"none\")\r\n            : setCurrentUtility(event.target.value);\r\n    }\r\n\r\n    const handleWhiteboard = (event) => {\r\n        event.stopPropagation()\r\n        if(event.target.id === \"ghost-name\"){\r\n            setGhostName(event.target.value);\r\n        }\r\n\r\n        if(event.target.id === \"objective-two\"){\r\n            setObjectiveTwo(event.target.value);\r\n        }\r\n\r\n        if(event.target.id === \"objective-three\"){\r\n            setObjectiveThree(event.target.value);\r\n        }\r\n\r\n        if(event.target.id === \"objective-four\"){\r\n            setObjectiveFour(event.target.value);\r\n        }\r\n\r\n        if(event.target.id === \"individuals\" || event.target.id === \"groups\"){\r\n            setGhostBehavior(event.target.value);\r\n        }\r\n\r\n        setWhiteboardData({\r\n            'ghostName': ghostName,\r\n            'objectiveTwo': objectiveTwo,\r\n            'objectiveThree': objectiveThree,\r\n            'objectiveFour': objectiveFour,\r\n            'ghostBehavior': ghostBehavior\r\n        })\r\n    }\r\n\r\n    const handleEvidenceToggle = (event) => {\r\n        const evidenceId = parseInt(event.target.id);\r\n        const eventValue = parseInt(event.target.value);\r\n\r\n        if(eventValue === 0){\r\n            handleNegativeEvidence(evidenceId);\r\n        }\r\n        if(eventValue === 1){\r\n            handleNeutralEvidence(evidenceId);\r\n        }\r\n        if(eventValue === 2){\r\n            handlePositiveEvidence(evidenceId);\r\n        }\r\n    }\r\n\r\n    const removeEvidence = (evidenceId, target) => {\r\n        if(target === 'positive' && positiveEvidence.includes(evidenceId)){\r\n            let targetIndex = positiveEvidence.indexOf(evidenceId);\r\n            let tempArray = [...positiveEvidence];\r\n\r\n            tempArray.splice(targetIndex, 1);\r\n\r\n            setPositiveEvidence([...tempArray], stateUpdater());\r\n        }\r\n\r\n        if(target === 'negative' && negativeEvidence.includes(evidenceId)){\r\n            let targetIndex = negativeEvidence.indexOf(evidenceId);\r\n            let tempArray = [...negativeEvidence];\r\n\r\n            tempArray.splice(targetIndex, 1);\r\n\r\n            setNegativeEvidence([...tempArray], stateUpdater());\r\n        }\r\n    }\r\n\r\n    const addEvidence = (evidenceId, target) => {\r\n        if(target === 'positive' && !positiveEvidence.includes(evidenceId)){\r\n            setPositiveEvidence([...positiveEvidence, evidenceId], stateUpdater())\r\n        }\r\n        if(target === 'negative' && !negativeEvidence.includes(evidenceId)){\r\n            setNegativeEvidence([...negativeEvidence, evidenceId], stateUpdater())\r\n        }\r\n    }\r\n\r\n    const handlePositiveEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'negative');\r\n        addEvidence(evidenceId, 'positive');\r\n    }\r\n\r\n    const handleNegativeEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'positive');\r\n        addEvidence(evidenceId,'negative');\r\n    }\r\n\r\n    const handleNeutralEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'positive');\r\n        removeEvidence(evidenceId, 'negative');\r\n    }\r\n\r\n    const stateUpdater = () => {\r\n        const result = fullOutput(positiveEvidence, negativeEvidence, ghostData.ghosts);\r\n\r\n        setDetectedGhost(result.positiveID);\r\n        setPossibleGhosts(result.possibleGhosts);\r\n        setNegativeGhosts(result.eliminatedGhosts);\r\n        setMessageToUser(result.message);\r\n    }\r\n\r\n    const resetEvidence = () => {\r\n        setPositiveEvidence([]);\r\n        setNegativeEvidence([])\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <UtilitiesContainer\r\n            evidence={ghostData.evidences}\r\n            handleEvidenceToggle={handleEvidenceToggle}\r\n            handleUtility={handleUtility}\r\n            currentUtility={currentUtility}\r\n            allOptionsUsed={positiveEvidence.length === 3}\r\n            positiveEvidence={positiveEvidence}\r\n            negativeEvidence={negativeEvidence}\r\n            resetEvidence={resetEvidence}\r\n            whiteboardData={whiteboardData}\r\n            handleWhiteboard={handleWhiteboard}\r\n        />\r\n        <GhostContainer\r\n            ghosts={ghostData.ghosts}\r\n            evidence={ghostData.evidences}\r\n            positiveID={detectedGhost}\r\n            possibleGhosts={possibleGhosts}\r\n            negativeGhosts={negativeGhosts}\r\n            message={messageToUser}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\reportWebVitals.js",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx",[],"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js",[],"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx",[],"C:\\Users\\rodri\\onedrive\\desktop\\projetos aleatorios\\1. full stack development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx",["118"],"import React from 'react';\r\nimport './GhostCard.css';\r\n\r\n// Ghost Pictures\r\nimport spirit from '../../../../images/ghosts/0.png';\r\nimport wraith from '../../../../images/ghosts/1.png';\r\nimport banshee from '../../../../images/ghosts/2.png';\r\nimport demon from '../../../../images/ghosts/3.png';\r\nimport jinn from '../../../../images/ghosts/4.png';\r\nimport mare from '../../../../images/ghosts/5.png';\r\nimport oni from '../../../../images/ghosts/6.png';\r\nimport phantom from '../../../../images/ghosts/7.png';\r\nimport poltergeist from '../../../../images/ghosts/8.png';\r\nimport revenant from '../../../../images/ghosts/9.png';\r\nimport shade from '../../../../images/ghosts/10.png';\r\nimport yurei from '../../../../images/ghosts/11.png';\r\n\r\nexport default function GhostCard(props){\r\n    const ghostPictures = [\r\n        {spirit},\r\n        {wraith},\r\n        {banshee},\r\n        {demon},\r\n        {jinn},\r\n        {mare},\r\n        {oni},\r\n        {phantom},\r\n        {poltergeist},\r\n        {revenant},\r\n        {shade},\r\n        {yurei}\r\n    ];\r\n\r\n    const targetPicture = ghostPictures[props.ghostId];\r\n    const targetSubstring = props.ghostType.toLowerCase();\r\n\r\n    return(\r\n        <div className={props.cardType}>\r\n            <div className={\"ghost-name\"}>\r\n                {props.ghostType}\r\n            </div>\r\n            <div className={\"ghost-picture\"}>\r\n                <img src={targetPicture[targetSubstring]} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["119","120"],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\google-analytics-sensitive\\gaConfiguration.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\EvidenceRow\\EvidenceRow.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\UtilitiesContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\UtilitiesTabs.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Utilities.jsx",["121"],"import React from 'react';\r\n\r\nimport EvidenceContainer from \"./EvidenceContainer/EvidenceContainer\";\r\nimport HuntCountdown from \"./HuntCountdown/HuntCountdown\";\r\nimport Whiteboard from \"./Whiteboard/Whiteboard\";\r\n\r\nexport default function Utilities(props){\r\n    const propChecker = () => {\r\n        if(props.currentUtility === \"evidence\"){\r\n            return <EvidenceContainer\r\n                    evidence={props.evidence}\r\n                    handleEvidenceToggle={props.handleEvidenceToggle}\r\n                    allOptionsUsed={props.allOptionsUsed}\r\n                    positiveEvidence={props.positiveEvidence}\r\n                    negativeEvidence={props.negativeEvidence}\r\n                    resetEvidence={props.resetEvidence}\r\n                    currentUtility={props.currentUtility}\r\n            />\r\n        }\r\n\r\n        if(props.currentUtility === \"timer\"){\r\n            return <HuntCountdown />\r\n        }\r\n\r\n        /**\r\n        if(props.currentUtility === \"board\"){\r\n            return <Whiteboard handleWhiteboard={props.handleWhiteboard} whiteboardData={props.whiteboardData} />\r\n        }\r\n         */\r\n\r\n        if(props.currentUtility === \"none\"){\r\n            return null\r\n        }\r\n    }\r\n\r\n    const componentToRender = propChecker();\r\n\r\n    return componentToRender\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Whiteboard\\Whiteboard.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\EvidenceContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\HuntCountdown\\HuntCountdown.jsx",["122"],"import React, { useState, useEffect } from 'react';\r\nimport './HuntCountdown.css';\r\n\r\nexport default function HuntCountdown(){\r\n    const [countdownTrigger, setCountdownTrigger] = useState(false);\r\n    const [timerType, setTimerType] = useState('amateur');\r\n    const [expandedDiv, setExpandedDiv] = useState(true);\r\n\r\n    const [totalTime, setTotalTime] = useState(300);\r\n    const [minutes, setMinutes] = useState();\r\n    const [seconds, setSeconds] = useState();\r\n\r\n    useEffect(() => {\r\n        if(countdownTrigger && totalTime > 0){\r\n            timer(totalTime);\r\n        }\r\n\r\n        handleTime(totalTime);\r\n    }, [totalTime, countdownTrigger, minutes, seconds]);\r\n\r\n    const handleCountdown = () => {\r\n        setCountdownTrigger(!countdownTrigger);\r\n\r\n        let time = timerType === 'amateur' ? 300 : 150;\r\n        handleTime(time);\r\n    }\r\n\r\n    const timer = (time) => {\r\n        setTimeout(() => setTotalTime(time - 1), 1000)\r\n    }\r\n\r\n    const handleView = () => {\r\n        setExpandedDiv(!expandedDiv)\r\n    }\r\n\r\n    const handleTypeSwitch = () => {\r\n        setCountdownTrigger(false)\r\n\r\n        if(timerType === \"amateur\"){\r\n            setTimerType('intermediate');\r\n            handleTime(150);\r\n        } else {\r\n            setTimerType('amateur');\r\n            handleTime(300);\r\n        }\r\n    }\r\n\r\n    const handleTime = (time) => {\r\n\r\n        const standardMinutes = timerType === 'amateur' ? 5 : 2;\r\n        const standardSeconds = timerType === 'amateur' ? 0 : 30;\r\n\r\n        const minutesResult = countdownTrigger\r\n            ? (Math.floor(time / 60))\r\n            : standardMinutes\r\n        const secondsResult = countdownTrigger\r\n            ? time % 60\r\n            : standardSeconds\r\n\r\n        setTotalTime(time);\r\n        setMinutes(minutesResult.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}));\r\n        setSeconds(secondsResult.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}));\r\n    }\r\n\r\n    const countdownButtonText = countdownTrigger ? \"Stop and reset\" : \"Start\";\r\n    const timerTypeSwitch = timerType === 'amateur' ? \"Switch to Intermediate\" : \"Switch to Amateur\";\r\n\r\n    const fullView = (\r\n        <div className={'countdown-container-expanded'}>\r\n            <button className={\"minimize\"} onClick={handleView}>_</button>\r\n\r\n            <h2>\r\n                Setup Time\r\n            </h2>\r\n\r\n            <p />\r\n\r\n            <span className={\"time\"}>\r\n               {minutes} : {seconds}\r\n            </span>\r\n\r\n            <p/>\r\n\r\n            <button className={'countdown-trigger'} onClick={handleCountdown}>\r\n                {countdownButtonText}\r\n            </button>\r\n\r\n            <button className={\"timer-type-switch\"} onClick={handleTypeSwitch}>{timerTypeSwitch}</button>\r\n            <p />\r\n        </div>\r\n    );\r\n\r\n    const compactView = (\r\n        <div className={'countdown-container-compact'} onClick={setExpandedDiv}>\r\n            <span className={\"time-spin\"}>\r\n               {minutes} : {seconds}\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return expandedDiv ? fullView : compactView\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ResetButton\\ResetButton.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceTable\\EvidenceTable.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceRow\\EvidenceRow.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ToggleSwitch\\ThreeWaySwitch.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\Header\\Header.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":32,"column":8,"nodeType":"129","endLine":32,"endColumn":44,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":79,"column":9,"nodeType":"133","endLine":79,"endColumn":27},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":19,"column":8,"nodeType":"138","messageId":"139","endLine":19,"endColumn":12},{"ruleId":"127","severity":1,"message":"128","line":54,"column":8,"nodeType":"129","endLine":54,"endColumn":44,"suggestions":"140"},{"ruleId":"131","severity":1,"message":"132","line":43,"column":17,"nodeType":"133","endLine":43,"endColumn":61},{"ruleId":"123","replacedBy":"141"},{"ruleId":"125","replacedBy":"142"},{"ruleId":"136","severity":1,"message":"143","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":18},{"ruleId":"127","severity":1,"message":"144","line":19,"column":8,"nodeType":"129","endLine":19,"endColumn":55,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateUpdater'. Either include it or remove the dependency array.","ArrayExpression",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["146"],["147"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["149"],["146"],["147"],"'Whiteboard' is defined but never used.","React Hook useEffect has a missing dependency: 'handleTime'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [positiveEvidence, negativeEvidence, stateUpdater]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [totalTime, countdownTrigger, minutes, seconds, handleTime]",{"range":"159","text":"160"},[1062,1098],"[positiveEvidence, negativeEvidence, stateUpdater]",[1816,1852],[623,670],"[totalTime, countdownTrigger, minutes, seconds, handleTime]"]