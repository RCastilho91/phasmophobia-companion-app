[{"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\index.js":"1","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\reportWebVitals.js":"2","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\App.js":"3","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js":"4","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\google-analytics-sensitive\\gaConfiguration.jsx":"5","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\ToolboxToggle.jsx":"6","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\UtilitiesContainer.jsx":"7","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\Header\\Header.jsx":"8","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx":"9","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\MapReference.jsx":"10","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Utilities.jsx":"11","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\EvidenceContainer.jsx":"12","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx":"13","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceTable\\EvidenceTable.jsx":"14","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\BlackenedBackground\\BlackenedBackground.jsx":"15","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\ContentContainer.jsx":"16","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\ToolboxHeader\\ToolboxHeader.jsx":"17","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\HuntCountdown\\HuntCountdown.jsx":"18","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\ResetButton\\ResetButton.jsx":"19","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\EvidenceRow\\EvidenceRow.jsx":"20","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\AppInformation\\AppInformation.jsx":"21","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Whiteboard\\Whiteboard.jsx":"22","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceRow\\EvidenceRow.jsx":"23","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\MapInformation.jsx":"24","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapList\\MapList.jsx":"25","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ToggleSwitch\\ThreeWaySwitch.jsx":"26","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapList\\MapListItem.jsx":"27","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\InnerComponents\\PhotoGallery\\PhotoGallery.jsx":"28","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\InnerComponents\\DescriptionContainer\\DescriptionContainer.jsx":"29"},{"size":517,"mtime":1609698078398,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1609698078399,"results":"32","hashOfConfig":"31"},{"size":7369,"mtime":1619551514518,"results":"33","hashOfConfig":"31"},{"size":2530,"mtime":1609698078401,"results":"34","hashOfConfig":"31"},{"size":61,"mtime":1609698078403,"results":"35","hashOfConfig":"31"},{"size":243,"mtime":1616106529682,"results":"36","hashOfConfig":"31"},{"size":634,"mtime":1621365028379,"results":"37","hashOfConfig":"31"},{"size":499,"mtime":1610890283575,"results":"38","hashOfConfig":"31"},{"size":3505,"mtime":1621365264110,"results":"39","hashOfConfig":"31"},{"size":593,"mtime":1619551514533,"results":"40","hashOfConfig":"31"},{"size":1122,"mtime":1616106595866,"results":"41","hashOfConfig":"31"},{"size":745,"mtime":1616107233685,"results":"42","hashOfConfig":"31"},{"size":539,"mtime":1611509155610,"results":"43","hashOfConfig":"31"},{"size":1187,"mtime":1610890283581,"results":"44","hashOfConfig":"31"},{"size":172,"mtime":1619551514521,"results":"45","hashOfConfig":"31"},{"size":1226,"mtime":1619551514523,"results":"46","hashOfConfig":"31"},{"size":514,"mtime":1616106595871,"results":"47","hashOfConfig":"31"},{"size":2556,"mtime":1610890283587,"results":"48","hashOfConfig":"31"},{"size":282,"mtime":1611269929786,"results":"49","hashOfConfig":"31"},{"size":3455,"mtime":1611509155609,"results":"50","hashOfConfig":"31"},{"size":2938,"mtime":1621365101924,"results":"51","hashOfConfig":"31"},{"size":4027,"mtime":1619259946253,"results":"52","hashOfConfig":"31"},{"size":697,"mtime":1610890283579,"results":"53","hashOfConfig":"31"},{"size":964,"mtime":1619551514529,"results":"54","hashOfConfig":"31"},{"size":552,"mtime":1619551514531,"results":"55","hashOfConfig":"31"},{"size":1534,"mtime":1610890283585,"results":"56","hashOfConfig":"31"},{"size":267,"mtime":1619551514531,"results":"57","hashOfConfig":"31"},{"size":2747,"mtime":1619556167263,"results":"58","hashOfConfig":"31"},{"size":718,"mtime":1619551514526,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"12krxmr",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\index.js",[],["122","123"],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\reportWebVitals.js",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\App.js",["124","125"],"import React, { useState, useEffect } from 'react';\r\n\r\n// Analytics\r\nimport ReactGA from 'react-ga';\r\n\r\n// Components\r\nimport Header from \"./components/Header/Header\";\r\nimport GhostContainer from \"./components/GhostContainer/GhostContainer\";\r\nimport UtilitiesContainer from './components/UtilitiesContainer/UtilitiesContainer';\r\nimport ToolboxToggle from \"./components/UtilitiesContainer/ToolboxToggle\";\r\n\r\n// Data\r\nimport ghostData from './utils/data/ghostData.json';\r\nimport googleId from \"./utils/google-analytics-sensitive/gaConfiguration\";\r\n\r\n// Auxiliary functions\r\nimport fullOutput from './utils/auxiliaryFunctions/outcomeChecker';\r\n\r\n// Styling\r\nimport './App.css';\r\nimport MapReference from \"./components/MapReference/MapReference\";\r\n\r\nexport default function App() {\r\n    const allGhostIDs = ghostData.ghosts.map((ghost) => {\r\n        return ghost.id\r\n    })\r\n\r\n    // Evidence handlers\r\n    const [positiveEvidence, setPositiveEvidence] = useState([]);\r\n    const [negativeEvidence, setNegativeEvidence] = useState([]);\r\n\r\n    // Possible outputs\r\n    const [detectedGhost, setDetectedGhost] = useState('');\r\n    const [possibleGhosts, setPossibleGhosts] = useState(allGhostIDs);\r\n    const [negativeGhosts, setNegativeGhosts] = useState([]);\r\n    const [messageToUser, setMessageToUser] = useState('');\r\n\r\n    // Current utility\r\n    const [currentUtility, setCurrentUtility] = useState(\"board\");\r\n    const [toolbox, setToolbox] = useState(true);\r\n\r\n    // Map reference\r\n    const [mapReference, setMapReference] = useState(false);\r\n\r\n    // Whiteboard Data\r\n    const [whiteboardData, setWhiteboardData] = useState({\r\n        'ghostName': '',\r\n        'objectiveTwo': '',\r\n        'objectiveThree': '',\r\n        'objectiveFour': '',\r\n        'ghostBehavior': 'Unknown'\r\n    });\r\n\r\n    useEffect(() => {\r\n        ReactGA.initialize(googleId);\r\n        ReactGA.pageview('/');\r\n\r\n        stateUpdater()\r\n\r\n    }, [positiveEvidence, negativeEvidence]);\r\n\r\n    const handleMapReference = () => {\r\n        setMapReference(!mapReference);\r\n    }\r\n\r\n    const handleUtility = (event) => {\r\n        setCurrentUtility(event.target.value);\r\n    }\r\n\r\n    const handleToolbox = () => {\r\n        setToolbox(!toolbox);\r\n    }\r\n\r\n    const handleWhiteboard = (event) => {\r\n        if(event.target.id === \"ghost-name\"){\r\n            setWhiteboardData({\r\n                ...whiteboardData,\r\n                'ghostName': event.target.value\r\n            });\r\n        }\r\n\r\n        if(event.target.id === \"objective-two\"){\r\n            setWhiteboardData({\r\n                ...whiteboardData,\r\n                'objectiveTwo': event.target.value\r\n            });\r\n        }\r\n\r\n        if(event.target.id === \"objective-three\"){\r\n            setWhiteboardData({\r\n                ...whiteboardData,\r\n                'objectiveThree': event.target.value\r\n            });\r\n        }\r\n\r\n        if(event.target.id === \"objective-four\"){\r\n            setWhiteboardData({\r\n                ...whiteboardData,\r\n                'objectiveFour': event.target.value\r\n            });\r\n        }\r\n\r\n        if(event.target.value === \"In group\" || event.target.value === \"Alone\" || event.target.value === \"Unknown\"){\r\n            setWhiteboardData({\r\n                ...whiteboardData,\r\n                'ghostBehavior': event.target.value\r\n            })\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    const clearWhiteboard = () => {\r\n        setWhiteboardData({\r\n            'ghostName': '',\r\n            'objectiveTwo': '',\r\n            'objectiveThree': '',\r\n            'objectiveFour': '',\r\n            'ghostBehavior': ''\r\n        });\r\n    }\r\n\r\n    const handleEvidenceToggle = (event) => {\r\n        const evidenceId = parseInt(event.target.id);\r\n        const eventValue = parseInt(event.target.value);\r\n\r\n        if(eventValue === 0){\r\n            handleNegativeEvidence(evidenceId);\r\n        }\r\n        if(eventValue === 1){\r\n            handleNeutralEvidence(evidenceId);\r\n        }\r\n        if(eventValue === 2){\r\n            handlePositiveEvidence(evidenceId);\r\n        }\r\n    }\r\n\r\n    const removeEvidence = (evidenceId, target) => {\r\n        if(target === 'positive' && positiveEvidence.includes(evidenceId)){\r\n            let targetIndex = positiveEvidence.indexOf(evidenceId);\r\n            let tempArray = [...positiveEvidence];\r\n\r\n            tempArray.splice(targetIndex, 1);\r\n\r\n            setPositiveEvidence([...tempArray], stateUpdater());\r\n        }\r\n\r\n        if(target === 'negative' && negativeEvidence.includes(evidenceId)){\r\n            let targetIndex = negativeEvidence.indexOf(evidenceId);\r\n            let tempArray = [...negativeEvidence];\r\n\r\n            tempArray.splice(targetIndex, 1);\r\n\r\n            setNegativeEvidence([...tempArray], stateUpdater());\r\n        }\r\n    }\r\n\r\n    const addEvidence = (evidenceId, target) => {\r\n        if(target === 'positive' && !positiveEvidence.includes(evidenceId)){\r\n            setPositiveEvidence([...positiveEvidence, evidenceId], stateUpdater())\r\n        }\r\n        if(target === 'negative' && !negativeEvidence.includes(evidenceId)){\r\n            setNegativeEvidence([...negativeEvidence, evidenceId], stateUpdater())\r\n        }\r\n    }\r\n\r\n    const handlePositiveEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'negative');\r\n        addEvidence(evidenceId, 'positive');\r\n    }\r\n\r\n    const handleNegativeEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'positive');\r\n        addEvidence(evidenceId,'negative');\r\n    }\r\n\r\n    const handleNeutralEvidence = (evidenceId) => {\r\n        removeEvidence(evidenceId, 'positive');\r\n        removeEvidence(evidenceId, 'negative');\r\n    }\r\n\r\n    const stateUpdater = () => {\r\n        const result = fullOutput(positiveEvidence, negativeEvidence, ghostData.ghosts);\r\n\r\n        setDetectedGhost(result.positiveID);\r\n        setPossibleGhosts(result.possibleGhosts);\r\n        setNegativeGhosts(result.eliminatedGhosts);\r\n        setMessageToUser(result.message);\r\n    }\r\n\r\n    const resetEvidence = () => {\r\n        setPositiveEvidence([]);\r\n        setNegativeEvidence([])\r\n    }\r\n\r\n  return (\r\n      <>\r\n      { mapReference ? <MapReference toggleAction={handleMapReference} /> : null }\r\n      <div className=\"App\">\r\n          <Header />\r\n\r\n          <a className={\"map-reference-link\"} onClick={handleMapReference}>Click here to see the map reference</a>\r\n\r\n          {   toolbox\r\n            ? <UtilitiesContainer\r\n                currentUtility={currentUtility}\r\n                whiteboardData={whiteboardData}\r\n                clearWhiteboard={clearWhiteboard}\r\n                handleUtility={handleUtility}\r\n                handleWhiteboard={handleWhiteboard}\r\n                handleToolbox={handleToolbox}\r\n            />\r\n            : <ToolboxToggle handleToolbox={handleToolbox} />\r\n          }\r\n\r\n        <GhostContainer\r\n            ghosts={ghostData.ghosts}\r\n            evidence={ghostData.evidences}\r\n            positiveEvidence={positiveEvidence}\r\n            negativeEvidence={negativeEvidence}\r\n            resetEvidence={resetEvidence}\r\n            handleEvidenceToggle={handleEvidenceToggle}\r\n            positiveID={detectedGhost}\r\n            possibleGhosts={possibleGhosts}\r\n            negativeGhosts={negativeGhosts}\r\n            message={messageToUser}\r\n        />\r\n        </div>\r\n      </>\r\n\r\n  );\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\auxiliaryFunctions\\outcomeChecker.js",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\utils\\google-analytics-sensitive\\gaConfiguration.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\ToolboxToggle.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\UtilitiesContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\GhostContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\MapReference.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Utilities.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\EvidenceContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\GhostCard.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceTable\\EvidenceTable.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\BlackenedBackground\\BlackenedBackground.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\ContentContainer.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\ToolboxHeader\\ToolboxHeader.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\HuntCountdown\\HuntCountdown.jsx",["126"],"import React, { useState, useEffect } from 'react';\r\nimport './HuntCountdown.css';\r\n\r\nexport default function HuntCountdown(){\r\n    const [countdownTrigger, setCountdownTrigger] = useState(false);\r\n    const [timerType, setTimerType] = useState('amateur');\r\n\r\n    const [totalTime, setTotalTime] = useState(300);\r\n    const [minutes, setMinutes] = useState();\r\n    const [seconds, setSeconds] = useState();\r\n\r\n    useEffect(() => {\r\n        if(countdownTrigger && totalTime > 0){\r\n            timer(totalTime);\r\n        }\r\n\r\n        handleTime(totalTime);\r\n    }, [totalTime, countdownTrigger, minutes, seconds]);\r\n\r\n    const handleCountdown = () => {\r\n        setCountdownTrigger(!countdownTrigger);\r\n\r\n        let time = timerType === 'amateur' ? 300 : 120;\r\n        handleTime(time);\r\n    }\r\n\r\n    const timer = (time) => {\r\n        setTimeout(() => setTotalTime(time - 1), 1000)\r\n    }\r\n\r\n    const handleTypeSwitch = () => {\r\n        setCountdownTrigger(false)\r\n\r\n        if(timerType === \"amateur\"){\r\n            setTimerType('intermediate');\r\n            handleTime(120);\r\n        } else {\r\n            setTimerType('amateur');\r\n            handleTime(300);\r\n        }\r\n    }\r\n\r\n    const handleTime = (time) => {\r\n\r\n        const standardMinutes = timerType === 'amateur' ? 5 : 2;\r\n        const standardSeconds = 0;\r\n\r\n        const minutesResult = countdownTrigger\r\n            ? (Math.floor(time / 60))\r\n            : standardMinutes\r\n        const secondsResult = countdownTrigger\r\n            ? time % 60\r\n            : standardSeconds\r\n\r\n        setTotalTime(time);\r\n        setMinutes(minutesResult.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}));\r\n        setSeconds(secondsResult.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}));\r\n    }\r\n\r\n    const countdownButtonText = countdownTrigger ? \"Stop and reset\" : \"Start\";\r\n    const timerTypeSwitch = timerType === 'amateur' ? \"Switch to Intermediate\" : \"Switch to Amateur\";\r\n\r\n    return (\r\n        <div className={'countdown-container'}>\r\n            <h2>\r\n                Setup Time\r\n            </h2>\r\n\r\n            <p />\r\n\r\n            <span className={\"time\"}>\r\n               {minutes} : {seconds}\r\n            </span>\r\n\r\n            <p/>\r\n\r\n            <button className={'countdown-trigger'} onClick={handleCountdown}>\r\n                {countdownButtonText}\r\n            </button>\r\n\r\n            <button className={\"timer-type-switch\"} onClick={handleTypeSwitch}>{timerTypeSwitch}</button>\r\n            <p />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\ResetButton\\ResetButton.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\GhostContainer\\InnerComponents\\GhostCard\\EvidenceRow\\EvidenceRow.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\AppInformation\\AppInformation.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\Whiteboard\\Whiteboard.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\EvidenceRow\\EvidenceRow.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\MapInformation.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapList\\MapList.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\UtilitiesContainer\\InnerComponents\\EvidenceContainer\\InnerComponents\\ToggleSwitch\\ThreeWaySwitch.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapList\\MapListItem.jsx",[],"C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\InnerComponents\\PhotoGallery\\PhotoGallery.jsx",["127","128"],"import React from 'react';\r\nimport './PhotoGallery.css';\r\n\r\n// Map labels\r\nimport asylumLabels from '../../../../../../../../images/maps/asylum/map_labels.jpg';\r\nimport bleasdaleLabels from '../../../../../../../../images/maps/bleasdale/map_labels.jpg';\r\nimport edgefieldLabels from '../../../../../../../../images/maps/edgefield/map_labels.jpg';\r\nimport graftonLabels from '../../../../../../../../images/maps/grafton/map_labels.jpg';\r\nimport highschoolLabels from '../../../../../../../../images/maps/highschool/map_labels.jpg';\r\nimport prisonLabels from '../../../../../../../../images/maps/prison/map_labels.png';\r\nimport ridgeviewLabels from '../../../../../../../../images/maps/ridgeview/map_labels.jpg';\r\nimport tanglewoodLabels from '../../../../../../../../images/maps/tanglewood/map_labels.png';\r\n\r\n// Map entrances\r\nimport asylumEntrance from '../../../../../../../../images/maps/asylum/asylum-outside.jpg';\r\nimport bleasdaleEntrance from '../../../../../../../../images/maps/bleasdale/bleasdale-outside.jpg';\r\nimport edgefieldEntrance from '../../../../../../../../images/maps/edgefield/edgefield-outside.jpg';\r\nimport graftonEntrance from '../../../../../../../../images/maps/grafton/grafton-outside.jpg';\r\nimport highschoolEntrance from '../../../../../../../../images/maps/highschool/highschool-outside.jpg';\r\nimport prisonEntrance from '../../../../../../../../images/maps/prison/prison-outside.jpg';\r\nimport ridgeviewEntrance from '../../../../../../../../images/maps/ridgeview/ridgeview-outside.jpg';\r\nimport tanglewoodEntrance from '../../../../../../../../images/maps/tanglewood/tanglewood-outside.jpg';\r\n\r\nexport default function PhotoGallery(props){\r\n    const photoReferences = {\r\n        'asylum': [asylumLabels, asylumEntrance],\r\n        'bleasdale': [bleasdaleLabels, bleasdaleEntrance],\r\n        'edgefield': [edgefieldLabels, edgefieldEntrance],\r\n        'grafton': [graftonLabels, graftonEntrance],\r\n        'highschool': [highschoolLabels, highschoolEntrance],\r\n        'prison': [prisonLabels, prisonEntrance],\r\n        'ridgeview': [ridgeviewLabels, ridgeviewEntrance],\r\n        'tanglewood': [tanglewoodLabels, tanglewoodEntrance]\r\n    }\r\n\r\n    const relevantPhotos = props.activeMap === undefined\r\n        ? \"No relevant photos to show\"\r\n        : photoReferences[props.activeMap].map((photo) => {\r\n            return <a href={photo} target={\"_blank\"}><img alt={props.activeMap} className={\"map-photo\"} src={photo} /></a>\r\n        })\r\n\r\n    return(\r\n        <div className={\"photo-gallery\"}>\r\n            <a href={\"https://phasmophobia.fandom.com/wiki/Main_Page\"} target={\"_blank\"}>Labeled maps brought to you from the Phasmophobia fan-maintained Wiki</a>\r\n            {relevantPhotos}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\rodri\\OneDrive\\Desktop\\Projetos Aleatorios\\1. Full Stack Development\\phasmophobia-companion\\src\\components\\MapReference\\InnerComponents\\ContentContainer\\InnerComponents\\MapContent\\InnerComponents\\DescriptionContainer\\DescriptionContainer.jsx",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":60,"column":8,"nodeType":"135","endLine":60,"endColumn":44,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":202,"column":11,"nodeType":"139","endLine":202,"endColumn":76},{"ruleId":"133","severity":1,"message":"140","line":18,"column":8,"nodeType":"135","endLine":18,"endColumn":55,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":39,"column":36,"nodeType":"144","endLine":39,"endColumn":53},{"ruleId":"142","severity":1,"message":"143","line":44,"column":72,"nodeType":"144","endLine":44,"endColumn":89},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateUpdater'. Either include it or remove the dependency array.","ArrayExpression",["147"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'handleTime'. Either include it or remove the dependency array.",["148"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [positiveEvidence, negativeEvidence, stateUpdater]",{"range":"153","text":"154"},"Update the dependencies array to be: [totalTime, countdownTrigger, minutes, seconds, handleTime]",{"range":"155","text":"156"},[1926,1962],"[positiveEvidence, negativeEvidence, stateUpdater]",[564,611],"[totalTime, countdownTrigger, minutes, seconds, handleTime]"]